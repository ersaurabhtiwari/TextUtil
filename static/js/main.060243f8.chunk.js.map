{"version":3,"sources":["Components/Navbar.js","Components/Textarea.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","ram","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","shyam","role","onClick","toogleMode","htmlFor","Textarea","_useState","useState","_useState2","Object","slicedToArray","Text","setText","Fragment","style","color","value","onChange","event","target","placeholder","height","backgroundColor","defaultValue","newText","toUpperCase","showAlert","toLowerCase","text","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","kam","body","title","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"kOAIe,SAASA,EAAOC,GAC3B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAA1C,QAAAD,OAAqDL,EAAMM,OACzEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAKP,EAAMQ,KAC5CP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBK,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1Lb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAKP,EAAMiB,QAErEhB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAIdH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,UAAbL,EAAMM,KAAe,OAAO,UACzEL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBK,KAAK,WAAWS,KAAK,SAASH,GAAG,yBAAyBI,QAASnB,EAAMoB,aAC7GnB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBiB,QAAQ,0BAA5C,uBCrBD,SAASC,EAAStB,GAC/B,IA4BAuB,EAAwBC,mBAAS,IAAjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAaI,EAAbJ,EAAA,GAGA,OACExB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY2B,MAAO,CAACC,MAAoB,SAAbhC,EAAMM,KAAc,QAAQ,UACpEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAKH,EAAMsB,UACXrB,EAAAC,EAAAC,cAAA,YACEC,UAAU,eACV6B,MAAOL,EACPM,SArBS,SAACC,GAElBN,EAAQM,EAAMC,OAAOH,QAoBbI,YAAY,uBACZtB,GAAG,oBACHgB,MAAO,CAAEO,OAAQ,QAAQC,gBAA8B,SAAbvC,EAAMM,KAAc,OAAO,QAAS0B,MAAoB,SAAbhC,EAAMM,KAAc,QAAQ,SACjHkC,aAAc,KAEhBvC,EAAAC,EAAAC,cAAA,UACEM,KAAK,SACLL,UAAU,uBACVe,QAhDW,WAEnB,IAAIsB,EAAUb,EAAKc,cACnBb,EAAQY,GACRzC,EAAM2C,UAAU,8BAA8B,aAyCxC,wBAOA1C,EAAAC,EAAAC,cAAA,UACEM,KAAK,SACLL,UAAU,uBACVe,QAjDW,WAEnB,IAAIsB,EAAUb,EAAKgB,cACnBf,EAAQY,GACRzC,EAAM2C,UAAU,8BAA8B,aA0CxC,wBAOA1C,EAAAC,EAAAC,cAAA,UACEM,KAAK,SACLL,UAAU,sBACVe,QAlDU,WAGlBU,EADc,IAEd7B,EAAM2C,UAAU,eAAe,aA2CzB,cAOA1C,EAAAC,EAAAC,cAAA,UACEM,KAAK,SACLL,UAAU,uBACVe,QA/CO,WACf,IAAI0B,EAAMC,SAASC,eAAe,qBAClCF,EAAKG,SACLC,UAAUC,UAAUC,UAAUN,EAAKZ,OACnCjC,EAAM2C,UAAU,sBAAsB,aAwChC,eASJ1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY2B,MAAO,CAACC,MAAoB,SAAbhC,EAAMM,KAAc,QAAQ,UACpEL,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,wBACeyB,EAAKwB,MAAM,KAAKC,OAD/B,kBACsDzB,EAAKyB,QAE3DpD,EAAAC,EAAAC,cAAA,SAAI,KAAQyB,EAAKwB,MAAM,KAAKC,OAA5B,gBACApD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAIyB,KCnFG,SAAS0B,EAAMtD,GAK5B,OACAA,EAAMuD,OAAStD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBL,EAAMuD,MAAM9C,KAA7B,gCAAiES,KAAK,SACrFjB,EAAAC,EAAAC,cAAA,cANM,SAACqD,GACd,IAAMC,EAAQD,EAAKZ,cACnB,OAAOa,EAAMC,OAAO,GAAGhB,cAAgBe,EAAME,MAAM,GAInCC,CAAW5D,EAAMuD,MAAM9C,OAD/B,IACgDT,EAAMuD,MAAMM,KCkD9DC,MA7Cf,WACE,IAAAvC,EAAwBC,mBAAS,SAAjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOjB,EAAPmB,EAAA,GAAasC,EAAbtC,EAAA,GACAuC,EAA0BxC,mBAAS,MAAnCyC,EAAAvC,OAAAC,EAAA,EAAAD,CAAAsC,EAAA,GAAOT,EAAPU,EAAA,GAAcC,EAAdD,EAAA,GAEMtB,EAAU,SAACwB,EAAQ1D,GACtByD,EAAS,CACPL,IAAIM,EACJ1D,KAAKA,IAEP2D,WAAW,WACTF,EAAS,OACR,MAgBN,OACEjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KAEI7B,EAAAC,EAAAC,cAACJ,EAAD,CAAQS,IAAI,YAAYF,KAAMA,EAAMW,MAAM,OAAOoD,IAAI,WAAWjD,WAjBrD,WACF,UAAPd,GACDyD,EAAQ,QACRjB,SAASwB,KAAKvC,MAAMQ,gBAAgB,OACpCI,EAAU,6BAA6B,WACvCG,SAASyB,MAAM,wBAGfR,EAAQ,SACRjB,SAASwB,KAAKvC,MAAMQ,gBAAgB,QACpCI,EAAU,8BAA8B,WACxCG,SAASyB,MAAM,2BAOdtE,EAAAC,EAAAC,cAACmD,EAAD,CAAOC,MAAOA,IAChBtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAIPH,EAAAC,EAAAC,cAACmB,EAAD,CAAUA,SAAS,2BAA2BqB,UAAWA,EAAWrC,KAAMA,OCtC3EkE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACPrF,EAAAC,EAAAC,cAACF,EAAAC,EAAMqF,WAAP,KACEtF,EAAAC,EAAAC,cAACqF,EAAD,OAEF1C,SAASC,eAAe,SAM1ByB","file":"static/js/main.060243f8.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.ram}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.shyam}</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/About\">{props.kam}</Link> */}\r\n              </li>\r\n            </ul>\r\n              <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toogleMode}/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n              </div>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textarea(props) {\r\n  const handleUpCase = () => {\r\n    // console.log(\"clicked\"+Text);\r\n    let newText = Text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Upper case has been enabled\",\"success\");\r\n  };\r\n  const handleLoCase = () => {\r\n    // console.log(\"clicked\"+Text);\r\n    let newText = Text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Lower case has been enabled\",\"success\");\r\n  };\r\n  const handleClear = () => {\r\n    // console.log(\"clicked\"+Text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Cleared text\",\"success\");\r\n  };\r\n  const handleText = (event) => {\r\n    // console.log(\"message in Uppercase\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleCopy=()=>{\r\n    var text =document.getElementById(\"floatingTextarea2\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"copied to clipboard\",\"success\");\r\n  };\r\n  const [Text, setText] = useState(\"\");\r\n  // Text=\"Newtext\"; This is wrong way\r\n  // setText(\"NewText\");this is right way\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <div className=\"form-floating\">\r\n          <h1>{props.Textarea}</h1>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={Text}\r\n            onChange={handleText}\r\n            placeholder=\"Leave a comment here\"\r\n            id=\"floatingTextarea2\"\r\n            style={{ height: \"300px\",backgroundColor: props.mode==='dark'?'gray':'white' ,color: props.mode==='dark'?'white':'black'}}\r\n            defaultValue={\"\"}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary my-3\"\r\n            onClick={handleUpCase}\r\n          >\r\n            Convert to Uppercase\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary mx-3\"\r\n            onClick={handleLoCase}\r\n          >\r\n            Convert to Lowercase\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger mx-2\"\r\n            onClick={handleClear}\r\n          >\r\n            Clear Text\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary mx-3\"\r\n            onClick={handleCopy}\r\n          >\r\n          Copy Text\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>About above paragraphs</h1>\r\n        <p>\r\n          No.of words {Text.split(\" \").length} and Character {Text.length}\r\n        </p>\r\n        <p>{0.008 * Text.split(\" \").length} Minute read</p>\r\n        <h2>Preview</h2>\r\n        <p>{Text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n   const capitalize = (word)=>{\r\n         const lower = word.toLowerCase();\r\n         return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n   }\r\n  return (\r\n  props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n        )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport Textarea from './Components/Textarea';\n// import About from './Components/About';\nimport React,{useState} from 'react';\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message,type)=>{\n     setAlert({\n       msg:message,\n       type:type\n     })\n     setTimeout(() => {\n       setAlert(null);\n     }, 1000);\n  }\n  const toogleMode=()=>{\n       if(mode===\"light\"){\n         setMode(\"dark\");\n         document.body.style.backgroundColor='gray';\n         showAlert(\"Dark mode has been Enabled\",\"success\");\n         document.title=\"textUtils-dark mode\";\n       }\n       else{\n         setMode(\"light\");\n         document.body.style.backgroundColor='white';\n         showAlert(\"Light mode has been Enabled\",\"success\");\n         document.title=\"textUtils-light mode\";\n       }\n  }\n  return (\n    <>\n    {/* <Router> */}\n        <Navbar ram=\"TextUtils\" mode={mode} shyam=\"Home\" kam=\"About Us\" toogleMode={toogleMode}/>\n          <Alert alert={alert}/>\n        <div className=\"container my-5\">\n           {/* <Routes> */}\n                {/* <Route exact path=\"/about\" element={<About/>} /> */}\n                {/* <Route  exact path=\"/\" element= { */}\n                <Textarea Textarea=\"Write text here in below\" showAlert={showAlert} mode={mode}/>\n                {/* } />                  */}\n           {/* </Routes>  */}\n        </div>    \n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}